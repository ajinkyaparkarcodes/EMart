// <auto-generated />
using EMart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMart.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240424202446_AddTableandSeedToDB")]
    partial class AddTableandSeedToDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMart.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DisplayOrder = 1,
                            Name = "Vegetables"
                        },
                        new
                        {
                            CategoryId = 2,
                            DisplayOrder = 2,
                            Name = "Fruits"
                        },
                        new
                        {
                            CategoryId = 3,
                            DisplayOrder = 3,
                            Name = "Foodgrains"
                        });
                });

            modelBuilder.Entity("EMart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PackSizeUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PackSizeValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Fresh organic potatoes",
                            ImageUrl = "",
                            ListPrice = 30.0,
                            Name = "Potato",
                            PackSizeUnit = "kg",
                            PackSizeValue = 1.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Juicy red tomatoes",
                            ImageUrl = "",
                            ListPrice = 25.0,
                            Name = "Tomato",
                            PackSizeUnit = "kg",
                            PackSizeValue = 1.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Crisp and aromatic onions",
                            ImageUrl = "",
                            ListPrice = 20.0,
                            Name = "Onion",
                            PackSizeUnit = "kg",
                            PackSizeValue = 1.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Fresh and crunchy carrots",
                            ImageUrl = "",
                            ListPrice = 35.0,
                            Name = "Carrot",
                            PackSizeUnit = "kg",
                            PackSizeValue = 1.0
                        });
                });

            modelBuilder.Entity("EMart.Models.Product", b =>
                {
                    b.HasOne("EMart.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
